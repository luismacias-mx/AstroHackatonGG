{"version":3,"file":"index.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,EAAE,yBAAyB,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,6BAA6B;AAC7B,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D,sDAAsD,iCAAiC;AACvF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe,GAAG,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC,qBAAqB,qBAAqB;AAC1C,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,qDAAqD,MAAM;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA","sources":["webpack://prueba_motoko_frontend/./src/prueba_motoko_frontend/src/index.js"],"sourcesContent":["// Configuración inicial\nlet map;\nlet markers = [];\nlet authClient;\nlet actor;\n\n// Inicialización cuando el DOM esté listo\ndocument.addEventListener('DOMContentLoaded', async () => {\n    await initAuth();\n    initMap();\n    setupEventListeners();\n});\n\n// Inicializar autenticación con Internet Identity\nasync function initAuth() {\n    authClient = await window.iiAuth.IiAuth.create();\n    \n    if (await authClient.isAuthenticated()) {\n        await loadActor();\n        updateUI();\n        loadBusinesses();\n    } else {\n        document.getElementById('authSection').innerHTML = `\n            <button id=\"loginBtn\" class=\"btn btn-success\">Iniciar Sesión</button>\n        `;\n    }\n}\n\n// Cargar el actor para interactuar con el canister\nasync function loadActor() {\n    const identity = authClient.getIdentity();\n    const agent = new window.ic.HttpAgent({ identity });\n    \n    if (process.env.NODE_ENV !== \"production\") {\n        await agent.fetchRootKey();\n    }\n    \n    const canisterId = await getCanisterId();\n    actor = window.ic.Actor.createActor(RewardSystemIDL, {\n        agent,\n        canisterId\n    });\n}\n\n// Obtener el ID del canister\nasync function getCanisterId() {\n    const canisterIds = await fetch('canister_ids.json').then(res => res.json());\n    return canisterIds.RewardSystem.local;\n}\n\n// Inicializar el mapa Leaflet\nfunction initMap() {\n    map = L.map('map').setView([19.4326, -99.1332], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n}\n\n// Configurar event listeners\nfunction setupEventListeners() {\n    document.addEventListener('click', async (e) => {\n        if (e.target.id === 'loginBtn') {\n            await authClient.login();\n            await loadActor();\n            updateUI();\n            loadBusinesses();\n        }\n        \n        if (e.target.id === 'logoutBtn') {\n            await authClient.logout();\n            location.reload();\n        }\n    });\n\n    document.getElementById('purchaseForm').addEventListener('submit', async (e) => {\n        e.preventDefault();\n        await recordPurchase();\n    });\n}\n\n// Actualizar la UI según el estado de autenticación\nasync function updateUI() {\n    if (await authClient.isAuthenticated()) {\n        const principal = authClient.getIdentity().getPrincipal().toString();\n        const profile = await actor.getUserProfile(principal);\n        \n        document.getElementById('authSection').innerHTML = `\n            <span class=\"text-light me-3\">${principal.slice(0, 10)}...</span>\n            <button id=\"logoutBtn\" class=\"btn btn-danger\">Cerrar Sesión</button>\n        `;\n        \n        document.getElementById('userInfo').innerHTML = `\n            <p><strong>Puntos:</strong> ${profile.totalPoints}</p>\n            <p><strong>Negocios visitados:</strong> ${profile.visitedBusinesses.length}</p>\n        `;\n    }\n}\n\n// Cargar negocios en el mapa y selector\nasync function loadBusinesses() {\n    const businesses = await actor.getNearbyBusinesses(19.4326, -99.1332, 0.1);\n    const select = document.getElementById('businessSelect');\n    \n    // Limpiar marcadores anteriores\n    markers.forEach(marker => map.removeLayer(marker));\n    markers = [];\n    \n    // Limpiar y poblar el selector\n    select.innerHTML = '';\n    businesses.forEach(business => {\n        // Añadir al selector\n        const option = document.createElement('option');\n        option.value = business.id;\n        option.textContent = `${business.name} (${business.category})`;\n        select.appendChild(option);\n        \n        // Añadir marcador al mapa\n        const marker = L.marker([business.location.lat, business.location.lng])\n            .addTo(map)\n            .bindPopup(`\n                <h6>${business.name}</h6>\n                <p>${business.description}</p>\n                <p><strong>Puntos:</strong> ${business.pointsRate * 100} por $100</p>\n            `);\n        \n        markers.push(marker);\n    });\n}\n\n// Registrar una compra\nasync function recordPurchase() {\n    const businessId = document.getElementById('businessSelect').value;\n    const amount = parseFloat(document.getElementById('purchaseAmount').value);\n    \n    if (!businessId || isNaN(amount)) {\n        document.getElementById('purchaseResult').innerHTML = `\n            <div class=\"alert alert-danger\">Datos inválidos</div>\n        `;\n        return;\n    }\n    \n    try {\n        const pointsEarned = await actor.recordPurchase(businessId, amount);\n        document.getElementById('purchaseResult').innerHTML = `\n            <div class=\"alert alert-success\">\n                ¡Compra registrada! Ganaste ${pointsEarned} puntos.\n            </div>\n        `;\n        \n        // Actualizar UI\n        updateUI();\n        document.getElementById('purchaseAmount').value = '';\n    } catch (error) {\n        document.getElementById('purchaseResult').innerHTML = `\n            <div class=\"alert alert-danger\">Error: ${error}</div>\n        `;\n    }\n}\n\n// IDL generado por dfx (deberás reemplazarlo con el tuyo)\nconst RewardSystemIDL = [\n    // Aquí va la interfaz IDL generada por dfx\n];\n"],"names":[],"sourceRoot":""}